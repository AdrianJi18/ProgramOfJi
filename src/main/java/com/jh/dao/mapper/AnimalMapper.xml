<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jh.dao.AnimalMapper" >
  <sql id="Base_Column_List" >
    id, type, area, growth, inTime
  </sql>
  <select id="selectByPrimaryKey" resultType="com.jh.pojo.Animal" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from animal
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from animal
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jh.pojo.Animal" >
    insert into animal (id, type, area, 
      growth,inTime)
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{area,jdbcType=INTEGER}, 
      #{growth,jdbcType=INTEGER},#{inTime,jdbcType=TIME})
  </insert>
  <insert id="insertSelective" parameterType="com.jh.pojo.Animal" >
    insert into animal
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="area != null" >
        area,
      </if>
      <if test="growth != null" >
        growth,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="area != null" >
        #{area,jdbcType=INTEGER},
      </if>
      <if test="growth != null" >
        #{growth,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jh.pojo.Animal" >
    update animal
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="area != null" >
        area = #{area,jdbcType=INTEGER},
      </if>
      <if test="growth != null" >
        growth = #{growth,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateById" parameterType="java.util.Map" >
    update animal
    set 
    <foreach collection="list" item="item" index="index" separator=",">
    	${item.name}=#{item.value}
    </foreach>
    where id=#{id}
  </update>
  
  <update id="updateAnimalHealById" parameterType="java.util.Map" >
    update animal
    set 
    <foreach collection="list" item="item" index="index" separator=",">
    	${item.name}=#{item.value}
    </foreach>
    where id=#{id}
  </update>
  
  <!--分种类按条件查询牲畜数量-->
	<select id="countAnimalNumByCondition" parameterType="java.util.Map" resultType="java.util.Map">
		select count(*) as num,`type` from `animal` where 1=1 
		<if test="fromDate != null">
		<![CDATA[
			and `inTime` >= #{fromDate}
		]]>
		</if>
		<if test="toDate != null">
		<![CDATA[
			and `inTime` <= #{toDate}
		]]>
		</if>
		group by `type`
	</select>
	
	<!--分区域按条件查询牲畜数量-->
	<select id="countAnimalNumByArea" parameterType="java.util.Map" resultType="java.util.Map">
		select count(*) as num,`area` from `animal` where 1=1 
		<if test="fromDate != null">
		<![CDATA[
			and `inTime` >= #{fromDate}
		]]>
		</if>
		<if test="toDate != null">
		<![CDATA[
			and `inTime` <= #{toDate}
		]]>
		</if>
		group by `area`
	</select>
	
	<!--分区域按条件查询牲畜数量-->
	<select id="queryAnimalByProduce" parameterType="java.util.Map" resultType="java.util.Map">
		<![CDATA[
			select * from animal where area= 2 limit #{start},#{limit} 
		]]>
	</select>
	
	<!--按条件查询牲畜条目数-->
	<select id="countAnimalByCondition" resultType="java.lang.Integer">
		select count(ID) from `animal` where 1=1 
	</select>
	
	<!--按条件查询牲畜-->
	<select id="selectAnimalByCondition" parameterType="java.util.Map" resultType="java.util.Map">
		select A.`id`,A.`type`,A.`area`,A.`growth`,A.`health_state`,A.`inoculate`
		from `animal` A
		limit #{start},#{limit}
	</select>
</mapper>